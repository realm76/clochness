// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NodesColumns holds the columns for the "nodes" table.
	NodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "parent_handle", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "handle", Type: field.TypeString, Unique: true},
	}
	// NodesTable holds the schema information for the "nodes" table.
	NodesTable = &schema.Table{
		Name:       "nodes",
		Columns:    NodesColumns,
		PrimaryKey: []*schema.Column{NodesColumns[0]},
	}
	// NodeTimeEntriesColumns holds the columns for the "node_time_entries" table.
	NodeTimeEntriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "node_id", Type: field.TypeInt},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "node_time_entries", Type: field.TypeInt, Nullable: true},
	}
	// NodeTimeEntriesTable holds the schema information for the "node_time_entries" table.
	NodeTimeEntriesTable = &schema.Table{
		Name:       "node_time_entries",
		Columns:    NodeTimeEntriesColumns,
		PrimaryKey: []*schema.Column{NodeTimeEntriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "node_time_entries_nodes_time_entries",
				Columns:    []*schema.Column{NodeTimeEntriesColumns[4]},
				RefColumns: []*schema.Column{NodesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NodesTable,
		NodeTimeEntriesTable,
	}
)

func init() {
	NodeTimeEntriesTable.ForeignKeys[0].RefTable = NodesTable
}
